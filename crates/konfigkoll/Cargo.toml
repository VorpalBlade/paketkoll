[package]
categories = [
    "command-line-utilities",
    "filesystem",
    "os::linux-apis",
    "config",
]
description = "Konfigkoll is a configuration management tool for Arch Linux and Debian (and derivatives)"
edition = "2021"
keywords = ["apt", "arch-linux", "debian", "pacman", "config-management"]
license = "MPL-2.0"
name = "konfigkoll"
repository = "https://github.com/VorpalBlade/paketkoll"
rust-version = "1.80.0"
version = "0.1.8"

[[bin]]
name = "konfigkoll"
path = "src/main.rs"

[[bin]]
name = "konfigkoll-rune"
path = "src/bin/rune.rs"

[features]
# Default features
default = ["arch_linux", "debian", "vendored"]

# Include the Arch Linux backend
arch_linux = ["paketkoll_core/arch_linux"]

# Include support for the Debian backend
debian = ["paketkoll_core/debian"]

# Vendor C/C++ dependencies instead of linking them dynamically
vendored = ["paketkoll_core/vendored"]

[dependencies]
ahash.workspace = true
camino.workspace = true
clap.workspace = true
color-eyre.workspace = true
compact_str.workspace = true
dashmap.workspace = true
directories.workspace = true
either.workspace = true
eyre.workspace = true
itertools.workspace = true
konfigkoll_core = { version = "0.4.2", path = "../konfigkoll_core" }
konfigkoll_script = { version = "0.1.6", path = "../konfigkoll_script" }
konfigkoll_types = { version = "0.2.2", path = "../konfigkoll_types" }
konfigkoll_utils = { version = "0.1.5", path = "../konfigkoll_utils" }
ouroboros.workspace = true
paketkoll_cache = { version = "0.2.5", path = "../paketkoll_cache" }
paketkoll_core = { version = "0.5.6", path = "../paketkoll_core" }
paketkoll_types = { version = "0.2.1", path = "../paketkoll_types" }
rayon.workspace = true
rune = { workspace = true, features = ["cli"] }
tokio.workspace = true
tracing-error.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true

[target.'cfg(target_env = "musl")'.dependencies]
# The allocator on musl is attrociously slow, so we use a custom one.
# Jemalloc doesn't work reliably on Aarch64 due to varying page size, so use
# the slightly slower mimalloc instead.
mimalloc.workspace = true

[lints]
workspace = true
